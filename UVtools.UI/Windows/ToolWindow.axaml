<controls:WindowEx xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:UVtools.UI.Controls"
        xmlns:i="clr-namespace:Projektanker.Icons.Avalonia;assembly=Projektanker.Icons.Avalonia"
        xmlns:uvtava="clr-namespace:UVtools.AvaloniaControls;assembly=UVtools.AvaloniaControls"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="UVtools.UI.Windows.ToolWindow"
        SizeToContent="WidthAndHeight"
        MinWidth="500"
        MinHeight="400"
        WindowStartupLocation="CenterOwner"
        Title="Tool"
        Icon="/Assets/Icons/UVtools.ico">

   <Grid RowDefinitions="Auto,Auto,Auto,Auto,*,Auto">
    
    <!-- Description -->
    <Border Grid.Row="0"
      Padding="5"
      IsVisible="{Binding Description, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
        <Expander IsExpanded="{Binding Settings.Tools.ExpandDescriptions}"
                  HorizontalAlignment="Stretch"
                  HorizontalContentAlignment="Stretch"
                  Padding="10"
                  Header="Description (Click to toggle)">

            <SelectableTextBlock MaxWidth="{Binding DescriptionMaxWidth}"
                                 TextWrapping="Wrap"
                                 FontSize="16"
                                 Text="{Binding Description}"/>
            
        </Expander>
    </Border>

    <!-- Layer Range -->
	<uvtava:ScrollGroupBox Grid.Row="1"
                    Margin="5"
                    IsVisible="{Binding LayerRangeVisible}">

       <uvtava:ScrollGroupBox.Header>
           <Grid ColumnDefinitions="Auto,*">
               <TextBlock Grid.Column="0"
                   VerticalAlignment="Center"
                   Text="Layer range selector"/>
               <CheckBox Grid.Column="1"
                         VerticalAlignment="Center"
                         HorizontalAlignment="Right"
                         IsChecked="{Binding LayerRangeSync}"
                         IsVisible="{Binding LayerIndexEndEnabled}"
                         ToolTip.Tip="Synchronize and lock the layer range for single layer navigation"
                         Content="Synchronize"/>
           </Grid>
       </uvtava:ScrollGroupBox.Header>

	   <Grid RowDefinitions="Auto,5,Auto"
          ColumnDefinitions="Auto,180,Auto,180,Auto">
		   <TextBlock Grid.Row="0" Grid.Column="0"
					  VerticalAlignment="Center"
					  Text="From:"
					  Margin="0,0,10,0"/>

		   <NumericUpDown Grid.Row="0" Grid.Column="1"
						  Classes="ValueLabel ValueLabel_layers"
						  VerticalAlignment="Center"
						  Minimum="0"
						  Maximum="{Binding MaximumLayerIndex}"
						  Value="{Binding LayerIndexStart}"/>

		   <TextBlock Grid.Row="0" Grid.Column="2"
                      VerticalAlignment="Center"
                      Text="To:"
                      IsEnabled="{Binding !LayerRangeSync}"
                      Margin="20,0,10,0"/>

		   <NumericUpDown Grid.Row="0" Grid.Column="3"
						  Classes="ValueLabel ValueLabel_layers"
						  VerticalAlignment="Center"
						  Minimum="0"
						  Maximum="{Binding MaximumLayerIndex}"
						  Value="{Binding LayerIndexEnd}">
			   <NumericUpDown.IsEnabled>
				   <MultiBinding Converter="{x:Static BoolConverters.And}">
					   <Binding Path="LayerIndexEndEnabled"/>
					   <Binding Path="!LayerRangeSync"/>
				   </MultiBinding>
			   </NumericUpDown.IsEnabled>
		   </NumericUpDown>

		   <DropDownButton Grid.Row="0" Grid.Column="4"
						   Content="Select"
						   Margin="10,0,0,0"
						   VerticalAlignment="Stretch"
						   VerticalContentAlignment="Center"
						   Padding="10,0,10,0">
			   <DropDownButton.Flyout>
				   <MenuFlyout Placement="Bottom">
					   <MenuItem Header="_All layers"
								 HotKey="Ctrl + Shift + A" InputGesture="Ctrl + Shift + A"
								 Command="{Binding SelectAllLayers}"/>

					   <MenuItem Header="_Current layer"
								 HotKey="Ctrl + Shift + C" InputGesture="Ctrl + Shift + C"
								 Command="{Binding SelectCurrentLayer}"/>

					   <Separator />

					   <MenuItem Header="From first to current layer"
								 HotKey="Ctrl + Alt + F" InputGesture="Ctrl + Alt + F"
								 Command="{Binding SelectFirstToCurrentLayer}"/>

					   <MenuItem Header="From current to last layer"
								 HotKey="Ctrl + Alt + L" InputGesture="Ctrl + Alt + L"
								 Command="{Binding SelectCurrentToLastLayer}"/>

					   <Separator />

					   <MenuItem Header="_Bottom layers"
								 HotKey="Ctrl + Shift + B" InputGesture="Ctrl + Shift + B"
								 Command="{Binding SelectBottomLayers}"/>

					   <MenuItem Header="_Normal layers"
								 HotKey="Ctrl + Shift + N" InputGesture="Ctrl + Shift + N"
								 Command="{Binding SelectNormalLayers}"/>

					   <Separator />

					   <MenuItem Header="_First layer"
								 HotKey="Ctrl + Shift + F" InputGesture="Ctrl + Shift + F"
								 Command="{Binding SelectFirstLayer}"/>

					   <MenuItem Header="_Last layer"
								 HotKey="Ctrl + Shift + L" InputGesture="Ctrl + Shift + L"
								 Command="{Binding SelectLastLayer}"/>
				   </MenuFlyout>
			   </DropDownButton.Flyout>
		   </DropDownButton>

		   <TextBlock
			 Grid.Row="2" Grid.Column="1"
			 HorizontalAlignment="Center"
			 Text="{Binding LayerStartMM, StringFormat=({0:F3}mm)}" />

		   <TextBlock
			 Grid.Row="2" Grid.Column="3"
			 HorizontalAlignment="Center"
			 Text="{Binding LayerEndMM, StringFormat=({0:F3}mm)}" />

		   <TextBlock
			 Grid.Row="2" Grid.Column="4"
			 Margin="10,0,0,0"
			 HorizontalAlignment="Center"
			 Text="{Binding LayerRangeCountStr}" />

	   </Grid>
   </uvtava:ScrollGroupBox>

    <!-- ROI -->
      <uvtava:ScrollGroupBox Grid.Row="2"
                       Margin="5"
                       IsVisible="{Binding IsROIOrMasksVisible}">

		  <uvtava:ScrollGroupBox.Header>
			  <Grid ColumnDefinitions="Auto,*">
                  <TextBlock Grid.Column="0"
                      VerticalAlignment="Center"
                      Text="Region of interest (ROI) and Masks" />

                  <StackPanel Orientation="Horizontal"
                              Grid.Column="1"
                              HorizontalAlignment="Right"
                              Spacing="1">
                      <Button VerticalAlignment="Center"
                              Content="Clear ROI"
                              IsVisible="{Binding IsROIVisible}"
                              Command="{Binding ClearROI}"/>
                      <Button VerticalAlignment="Center"
                              Content="{Binding Masks.Length, StringFormat=Clear {0} mask(s)}"
                              IsVisible="{Binding IsMasksVisible}"
                              Command="{Binding ClearMasks}"/>

                  </StackPanel>
              </Grid>
		  </uvtava:ScrollGroupBox.Header>

        <StackPanel Spacing="5">
          <TextBlock IsVisible="{Binding IsROIVisible}"
                     Text="{Binding ROI, StringFormat=Region: {0}}" />

            <CheckBox Content="Clear ROI and Masks after perform the operation"
                      IsChecked="{Binding ClearROIAndMaskAfterOperation}"/>

          </StackPanel>


    </uvtava:ScrollGroupBox>
    
    <!-- Profiles -->
    <uvtava:ScrollGroupBox Grid.Row="3"
                     Margin="5"
                     IsVisible="{Binding IsProfilesVisible}">

        <uvtava:ScrollGroupBox.Header>
            <Grid ColumnDefinitions="Auto,*">
                <TextBlock Grid.Row="0" Grid.Column="0"
                           VerticalAlignment="Center"
                           Text="{Binding Profiles.Count, StringFormat=Profiles: {0}}" />

                <Button Grid.Row="0" Grid.Column="1"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right"
                        ToolTip.Tip="Clear all profiles"
                        IsEnabled="{Binding Profiles.Count}"
                        Command="{Binding ClearProfiles}"
                        i:Attached.Icon="fa-solid fa-xmark">
                </Button>


            </Grid>
		</uvtava:ScrollGroupBox.Header>

		<Grid RowDefinitions="Auto,Auto"
          ColumnDefinitions="*,5,Auto,5,Auto,5,Auto">

          <ComboBox Grid.Row="0" Grid.Column="0" 
                    Name="ProfileComboBox"
                    Margin="0,0,0,10"
                    IsEnabled="{Binding Profiles.Count}"
                    IsVisible="{Binding Profiles.Count}"
                    SelectedItem="{Binding SelectedProfileItem}"
                    HorizontalAlignment="Stretch"
                    ItemsSource="{Binding Profiles}" 
                    Width="{Binding ProfileBoxMaxWidth}"/>

          <Button Grid.Row="0" Grid.Column="2"
                  Margin="0,0,0,10"
                  VerticalAlignment="Stretch"
                  ToolTip.Tip="Deselect the current profile"
                  IsEnabled="{Binding SelectedProfileItem, Converter={x:Static ObjectConverters.IsNotNull}}"
                  IsVisible="{Binding Profiles.Count}"
                  Command="{Binding DeselectProfile}"
                  i:Attached.Icon="fa-regular fa-square"/>

          <Button Grid.Row="0" Grid.Column="4"
                  Margin="0,0,0,10"
                  VerticalAlignment="Stretch"
                  FontWeight="Bold"
                  ToolTip.Tip="Set the selected profile as default to load in with this dialog.
&#x0a;Shift + click to clear the default profile."
                  IsEnabled="{Binding SelectedProfileItem, Converter={x:Static ObjectConverters.IsNotNull}}"
                  IsVisible="{Binding Profiles.Count}"
                  Command="{Binding SetDefaultProfile}"
                  Content="D"/>

          <Button Grid.Row="0" Grid.Column="6"
                  Margin="0,0,0,10"
                  VerticalAlignment="Stretch"
                  ToolTip.Tip="Remove the selected profile"
                  IsEnabled="{Binding SelectedProfileItem, Converter={x:Static ObjectConverters.IsNotNull}}"
                  IsVisible="{Binding Profiles.Count}"
                  Command="{Binding RemoveSelectedProfile}"
                  i:Attached.Icon="fa-solid fa-trash-alt"/>
           

          <TextBox Name="ProfileNameTextBox"
                   Grid.Row="1"
                   Grid.Column="0"
                   IsEnabled="{Binding ButtonOkEnabled}"
                   Text="{Binding ProfileText}"
                   Watermark="Profile name or leave empty for auto name"
                   Width="{Binding ProfileBoxMaxWidth}"/>

			<Button Grid.Row="1" Grid.Column="2"
                    VerticalAlignment="Stretch"
                    ToolTip.Tip="Add a new profile with the current set values"
                    IsEnabled="{Binding ButtonOkEnabled}"
                    Command="{Binding AddProfile}"
                    i:Attached.Icon="fa-solid fa-plus"/>
          
        </Grid>
    </uvtava:ScrollGroupBox>

    <!-- Content -->
    <uvtava:ScrollGroupBox Grid.Row="4"
      IsVisible="{Binding IsContentVisible}"
      Header="{Binding Title}"
      Content="{Binding ContentControl}"
      Margin="5"/>


    <!-- Actions -->
    <Border Grid.Row="5" Classes="FooterActions">
      <Grid RowDefinitions="Auto"
          ColumnDefinitions="*">
        <StackPanel Spacing="10" Orientation="Horizontal">
            <Button Command="{Binding #OptionsContextMenu.Open}"
                    IsVisible="{Binding CanHaveProfiles}"
                    Padding="10"
                    Content="☰">
                <Button.ContextMenu>
                    <ContextMenu Name="OptionsContextMenu" Placement="Top">
                        <MenuItem IsVisible="{Binding CanROI}"
                                  Command="{Binding SelectVolumeBoundingRectangle}"
                                  Header="Select print volume ROI"
                                  i:MenuItem.Icon="fa-solid fa-expand"/>

                        <Separator IsVisible="{Binding CanROI}"/>

                      <MenuItem IsVisible="{Binding CanHaveProfiles}"
                                Command="{Binding ImportSettings}"
                                Header="Import settings"
                                i:MenuItem.Icon="fa-solid fa-file-import"/>


                        <MenuItem 
                                  Command="{Binding ExportSettings}"
                                  Header="Export settings"
                                  i:MenuItem.Icon="fa-solid fa-file-export"/>

                        <Separator IsVisible="{Binding CanHaveProfiles}"/>

						<MenuItem Command="{Binding ResetToDefaults}"
                                  Header="Reset to defaults"
                                  i:MenuItem.Icon="fa-solid fa-undo-alt"/>
                    </ContextMenu>
                </Button.ContextMenu>
            </Button>

			<controls:ButtonWithIcon Padding="10"
                                     IsDefault="True"
                                     IsVisible="{Binding IsButton1Visible}"
                                     Icon="fa-solid fa-undo-alt"
                                     Text="{Binding Button1Text}"
                                     Command="{Binding OnButton1Click}">
          </controls:ButtonWithIcon>

          <CheckBox 
            IsChecked="{Binding IsCheckBox1Checked}"
            IsVisible="{Binding IsCheckBox1Visible}"
            Content="{Binding CheckBox1Text}"/>
        </StackPanel>

        <StackPanel 
          Spacing="10" 
          HorizontalAlignment="Right" 
          Orientation="Horizontal">

            <controls:ButtonWithIcon Padding="10"
                                     IsDefault="True"
                                     IsVisible="{Binding ButtonOkVisible}"
                                     IsEnabled="{Binding ButtonOkEnabled}"
                                     Icon="fa-solid fa-check"
                                     Text="{Binding ButtonOkText}"
                                     Command="{Binding Process}">
			</controls:ButtonWithIcon>

			<controls:ButtonWithIcon Padding="10"
                    IsCancel="True"
                    Icon="fa-solid fa-sign-out-alt" 
                    Text="Cancel"
                    Command="{Binding Close}"/>
        </StackPanel>
        
      </Grid>
    </Border>

  </Grid>

</controls:WindowEx>
