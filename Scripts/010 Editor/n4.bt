//------------------------------------------------
//--- 010 Editor v8.0.1 Binary Template
//
//      File: Anet N4
//   Authors: Tiago Conceição
//------------------------------------------------

BigEndian();

typedef struct() {
    uint32 WhitePixelsCount <fgcolor=cBlack, bgcolor=cWhite>; // White pixels region (border including corner pixels)
    uint32 XMin <fgcolor=cBlack, bgcolor=cWhite>;  // Bounding rectangle X
    uint32 YMin <fgcolor=cBlack, bgcolor=cWhite>;  // Bounding rectangle Y
    uint32 XMax <fgcolor=cBlack, bgcolor=cWhite>;  // Bounding rectangle Right
    uint32 YMax <fgcolor=cBlack, bgcolor=cWhite>;  // Bounding rectangle Bottom
    uint32 BitsCount <fgcolor=cBlack, bgcolor=cWhite>;
    ubyte LayerRLE[(BitsCount + 7) >> 3] <fgcolor=cBlack, bgcolor=cRed>;
} layerData;

struct HEADER {
    uint32 VersionLen <fgcolor=cBlack, bgcolor=cRed>; // 2
    wchar_t Version[VersionLen/2] <fgcolor=cBlack, bgcolor=cRed>; // 3
    uint32 NameLength <fgcolor=cBlack, bgcolor=cRed>; 
    wchar_t FileName[NameLength/2] <fgcolor=cBlack, bgcolor=cRed>; // File name without extension
    uint32 DescriptionLength <fgcolor=cBlack, bgcolor=cRed>; 
    wchar_t Description[DescriptionLength/2] <fgcolor=cBlack, bgcolor=cRed>; // File name without extension

    double XYPixelSize <fgcolor=cBlack, bgcolor=cRed>; // mm
    double LayerHeight <fgcolor=cBlack, bgcolor=cRed>; // mm; from 0.03 to 0.08

    uint32 BaseLayersCount <fgcolor=cBlack, bgcolor=cRed>; // Number of extent filled additional first layers; do not use!
    uint32 FilledBaseLayersCount <fgcolor=cBlack, bgcolor=cRed>; // Number of fully filled first layers inside BaseLayersCount; do not use!

    uint ExposureTime <fgcolor=cBlack, bgcolor=cRed>; // from 3 to 25
    uint BottomExposureTime <fgcolor=cBlack, bgcolor=cRed>; // from 60 to 120   
    uint32 BottomLayerCount <fgcolor=cBlack, bgcolor=cRed>; // from 2 to 10
    uint32 LiftSpeed <fgcolor=cBlack, bgcolor=cRed>;    // mm/s, from 1 to 10
    uint32 LiftHeight <fgcolor=cBlack, bgcolor=cRed>;   // mm, from 3 to 10
    
    uint32 PreviewResolutionX <fgcolor=cBlack, bgcolor=cRed>; // 260
    uint32 PreviewResolutionY <fgcolor=cBlack, bgcolor=cRed>; // 140
    uint32 PreviewSize <fgcolor=cBlack, bgcolor=cRed>;        // 72866
    ubyte PreviewContent[PreviewSize] <fgcolor=cBlack, bgcolor=0x00FF00>; // BMP image, BGR565
    double VolumeMicroL <fgcolor=cBlack, bgcolor=cRed>; // µl
    uint32 EncodedPrintTime <fgcolor=cBlack, bgcolor=cRed>; // s; for unknown reason always broken in original slicer
    uint32 LayerCount <fgcolor=cBlack, bgcolor=cRed>;
} header;


struct LAYERS {
    local int i;
    for( i = 0; i < header.LayerCount; i++ ){
        layerData lD();
    }
} layers;

uint32 SupportsCount <fgcolor=cBlack, bgcolor=cYellow>; // Supports count, always 0